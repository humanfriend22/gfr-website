rules_version = '2';

service cloud.firestore {
    match /databases/{database}/documents {
    // match /{document=**} {
        //   allow write: if false;
        //   allow read: if true;
        // }

        // Simple Data Fetchers
        function getCurrentSeason() {
            return get(/databases/$(database)/documents/site/site).data.currentSeason
        }

        function getTeamDoc(seasonId, teamId) {
            return get(/databases/$(database)/documents/seasons/$(seasonId)/teams/$(teamId)).data
        }

        function getUserDoc(userId) {
            return get(/databases/$(database)/documents/users/$(userId)).data
        }

        // Real Checks for role
        function isPresident(seasonId) {
            return request.auth != null && (request.auth.uid == 'h4OHCNqfnGNtePbgJFUhoJCGkL62' || request.auth.uid == get(/databases/$(database)/documents/seasons/$(seasonId)).data.officers.president)
        }

        function isJuniorPRED(seasonId) {
            return request.auth != null && (request.auth.uid == firestore.get(/databases/(default)/documents/seasons/$(seasonId)).data.officers.junior_pred)
        }

        function isSeniorPRED(seasonId) {
            return request.auth != null && (request.auth.uid == firestore.get(/databases/(default)/documents/seasons/$(seasonId)).data.officers.senior_pred)
        }

        function isCaptain(seasonId, teamId) {
            return request.auth != null && (request.auth.uid in get(/databases/$(database)/documents/seasons/$(seasonId)/teams/$(teamId)).data.captains)
        }

        function isCaptainOfTheirTeam(userId) {
            return isCaptain(getCurrentSeason(), getUserDoc(userId).team)
        }

        // User Document Field comparisions
        function adminFieldIsUnchanged(userId) {
            return get(/databases/$(database)/documents/users/$(userId)).data.isAdmin == request.resource.data.isAdmin
        }

        function emailFieldIsUnchanged(userId) {
            return get(/databases/$(database)/documents/users/$(userId)).data.email == request.resource.data.email
        }

        function grFieldIsUnchanged(userId) {
            return get(/databases/$(database)/documents/users/$(userId)).data.graduatingYear == request.resource.data.graduatingYear
        }

        function originalTeamFieldIsEmpty(userId) {
            return get(/databases/$(database)/documents/users/$(userId)).data.team == ""
        }

        function teamFieldIsUnchangedOrEmpty(userId) {
            return (get(/databases/$(database)/documents/users/$(userId)).data.team == request.resource.data.team) || originalTeamFieldIsEmpty(userId)
        }

        match /site/site {
            allow read: if true;
            allow write: if isPresident(getCurrentSeason());
        }
        match /users/{documentId} {
            allow read: if true;
            // president can update, user or their captain can update if admin field is unchanged and team field is unchanged/empty
            allow update: if isPresident(getCurrentSeason()) || request.auth.uid == documentId;
        }
        match /seasons/{seasonId} {
            allow read: if true;
            allow create, update: if isPresident(getCurrentSeason());
            match /teams/{teamId} {
                allow read: if true;
                allow create: if isPresident(seasonId);
                allow update: if isPresident(seasonId) || (isCaptain(seasonId, teamId) && getTeamDoc(seasonId, teamId).captains == request.resource.data.captains)
            }
        }
        match /events/{eventId} {
            allow read: if true;
            allow create, update: if isPresident(getCurrentSeason()) || isJuniorPRED(getCurrentSeason()) || isSeniorPRED(getCurrentSeason());
        }
        match /blogs/{blogId} {
            allow read: if true;
            allow create, update: if isPresident(getCurrentSeason()) || isJuniorPRED(getCurrentSeason()) || isSeniorPRED(getCurrentSeason());
        }
    }
}